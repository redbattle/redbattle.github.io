(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{365:function(a,s,e){"use strict";e.r(s);var t=e(8),l=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:"安装-homebrew"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-homebrew"}},[a._v("#")]),a._v(" 安装 Homebrew")]),a._v(" "),s("ul",[s("li",[a._v("安装命令"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n')])])])])]),a._v(" "),s("h2",{attrs:{id:"安装nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装nginx"}},[a._v("#")]),a._v(" 安装nginx")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("安装命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew install nginx\n")])])])]),a._v(" "),s("li",[s("p",[a._v("启动命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 由于类Linux系统下的安全策略设计，通常只有root进程可以绑定80端口，所以要加sudo\nsudo brew services start nginx\n")])])])]),a._v(" "),s("li",[s("p",[a._v("加入launchctl启动控制")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist\n# 取消启动\nlaunchctl unload ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist\n")])])])]),a._v(" "),s("li",[s("p",[a._v("wwww文件目录")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/usr/local/var/www\n")])])])]),a._v(" "),s("li",[s("p",[a._v("config文件地址")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/usr/local/etc/nginx/nginx.conf\n")])])])]),a._v(" "),s("li",[s("p",[a._v("打开 "),s("code",[a._v("nginx.conf")]),a._v(" 文件，更改配置使其支持php")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 找到 server 的 location 配置，给 index 加一个 index.php\n\nlocation / {\n    root   /usr/local/var/www;\n    index  index.html index.htm index.php;\n}\n    \n# 去掉 server 下 `location ~.php$` 的注释，并修改 fastcgi_param SCRIPT_FILENAME 配置\n\nlocation ~ \\.php$ {\n    fastcgi_pass   127.0.0.1:9000;\n    fastcgi_index  index.php;\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    include        fastcgi_params;\n}\n    \n# 在 /usr/local/var/www 下新建 一个php 文件，并访问如果有版本信息则说明配置成功\n\n<?php phpinfo(); ?>\n\n")])])])]),a._v(" "),s("li",[s("p",[a._v("浏览器查看地址（默认8080端口）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("http://127.0.0.1:8080\n")])])])]),a._v(" "),s("li",[s("p",[a._v("修改默认端口为80")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 打开 config 文件将 server 下的 \nlisten 8080;\n# 改为\nlisten 80;\n\n# 重启 nginx 如果提示 80 端口被占用，需要先kill一下 80 端口进程\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"安装php"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装php"}},[a._v("#")]),a._v(" 安装PHP")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("安装PHP扩展库")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew tap homebrew/dupes\nbrew tap homebrew/php\nbrew tap josegonzalez/homebrew-php\n")])])])]),a._v(" "),s("li",[s("p",[a._v("安装命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('brew install php71\n\necho export PATH="$(brew --prefix homebrew/php/php71)/bin:$PATH" >> ~/.bash_profile # 代替系统自带的 php\n\nsource ~/.bash_profile\n')])])])]),a._v(" "),s("li",[s("p",[a._v("启动命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew services start php71\n")])])])]),a._v(" "),s("li",[s("p",[a._v("加入launchctl启动控制")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php71.plist\n# 取消启动\nlaunchctl unload ~/Library/LaunchAgents/homebrew.mxcl.php71.plist\n")])])])]),a._v(" "),s("li",[s("p",[a._v(".ini文件地址")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/usr/local/etc/php/7.1/php.ini\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"安装mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装mysql"}},[a._v("#")]),a._v(" 安装mysql")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("安装命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew install mysql\n")])])])]),a._v(" "),s("li",[s("p",[a._v("启动命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew services start mysql\n")])])])]),a._v(" "),s("li",[s("p",[a._v("加入launchctl启动控制")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist\n# 取消启动\nlaunchctl unload ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist\n")])])])]),a._v(" "),s("li",[s("p",[a._v("设置账号(须先启动)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql_secure_installation\n")])])])]),a._v(" "),s("li",[s("p",[a._v("登陆账号(须先启动)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mysql -u <username>\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"安装mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装mongodb"}},[a._v("#")]),a._v(" 安装mongodb")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("安装命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew install mongodb\n")])])])]),a._v(" "),s("li",[s("p",[a._v("启动命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew services start mongodb\n# or\nmongod --config /usr/local/etc/mongod.conf\n")])])])]),a._v(" "),s("li",[s("p",[a._v("conf文件地址")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/usr/local/etc/mongod.conf\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"安装redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装redis"}},[a._v("#")]),a._v(" 安装redis")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("安装命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew install redis\n")])])])]),a._v(" "),s("li",[s("p",[a._v("启动命令")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 服务")]),a._v("\nbrew services start redis\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# or")]),a._v("\nredis-server /usr/local/etc/redis.conf\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 客户端")]),a._v("\nredis-cli\n")])])])]),a._v(" "),s("li",[s("p",[a._v("conf文件地址")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/usr/local/etc/redis.conf\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"安装composer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装composer"}},[a._v("#")]),a._v(" 安装composer")]),a._v(" "),s("ul",[s("li",[a._v("安装命令"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("php -r \"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n// 全局\nsudo mv composer.phar /usr/local/bin/composer\n")])])])]),a._v(" "),s("li",[a._v("添加阿里云镜像"),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("composer")]),a._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v(" repo.packagist "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("composer")]),a._v(" https://mirrors.aliyun.com/composer/\n")])])])]),a._v(" "),s("li",[a._v("取消镜像"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("composer config -g --unset repos.packagist\n")])])])])])])}),[],!1,null,null,null);s.default=l.exports}}]);