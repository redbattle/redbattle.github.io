(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{385:function(a,e,t){"use strict";t.r(e);var s=t(8),l=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("ul",[e("li",[e("p",[a._v("单例")])]),a._v(" "),e("li",[e("p",[a._v("链表")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- 火车形式，头部不储存数据\n- 链表节点有data和next，data储存数据，next指向下一个节点的地址\n")])])])]),a._v(" "),e("li",[e("p",[a._v("模拟实现localStorage")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code")])])]),a._v(" "),e("li",[e("p",[a._v("二分查找")])]),a._v(" "),e("li",[e("p",[a._v("排序")]),a._v(" "),e("ul",[e("li",[a._v("sort()实现")]),a._v(" "),e("li",[a._v("冒泡"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- 双循环\n- 每一轮从第0个数开始，比较当前值和后一位的值大小，大于则交换位置\n")])])])]),a._v(" "),e("li",[a._v("快速"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- 先取中间值\n- 依次取值与中间值比较，小于放左边，大于放右边\n")])])])]),a._v(" "),e("li",[a._v("插入"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- 先取一位数放在新数组里\n- 新取一位数依次与新数组的值进行比较，如果比新数组比较值大，则放到新数组比较值的前面\n")])])])])])]),a._v(" "),e("li",[e("p",[a._v("数据结构")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- 斐波那契数列，前一项加后一项的和等于第三项的值\n    - 循环算出数组最后两位的和，并返回，直到最后一层\n    - 递归返回函数以当前项和下一项的值作为参数\n")])])])]),a._v(" "),e("li",[e("p",[a._v("DFS，BFS，Trie")])]),a._v(" "),e("li",[e("p",[a._v("数组去重")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- Set，[...new Set(arr)]\n- for循环+indexOf，拿当前的值，如果新数组里不含当前值，则放到新数组\n- 双循环，用splice删除相同的值\n- 先排序，对相邻项进行正则分组匹配，处理相同数据\n- filter+indexOf，原数组中的第一个索引等于当前索引，则返回当前元素\n")])])])]),a._v(" "),e("li",[e("p",[a._v("数组扁平化")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- es6中，arr.flat(级数)，Infinity表示无限级\n- 无递归数组扁平化，使用堆栈 stack\n- 使用 reduce 与 concat \n- 递归判断是否含数组，如果含有数组，则使用concat解一层\n")])])]),e("blockquote",[e("p",[a._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/flat")])])]),a._v(" "),e("li",[e("p",[a._v("拖拽")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("- 给需要拖拽的节点绑定mousedown，mousemove，mouseup事件\n- mousedown事件触发够开始拖拽\n- mousemove时需要通过event.clientY和event.clientY来确定拖拽位置，并实时更新位置\n- mouseup拖拽结束\n- 需注意浏览器边界的情况\n")])])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);